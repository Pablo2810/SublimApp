#version: '3.8'

services:
  mysql:
    build:
      context: .
      dockerfile: DockerfileSQL
    container_name: mysql-sublimapp
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sublimapp_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      - mysql_data:/var/lib/mysql
      #- ./src/resources/data.sql:/docker-entrypoint-initdb.d/data.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-puser"]
      interval: 10s
      timeout: 5s
      retries: 5

  jetty:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jetty-sublimapp
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
    links:
      - mysql

volumes:
  mysql_data:


# üì¶ PASOS PARA LEVANTAR EL ENTORNO DOCKER DEL PROYECTO

# 1Ô∏è‚É£ Eliminar contenedores anteriores, vol√∫menes y hu√©rfanos (opcional pero recomendable si hubo cambios de estructura)
#  docker-compose down --volumes --remove-orphans

# 2Ô∏è‚É£ Compilar y empaquetar el proyecto con Maven (genera el WAR en /target)
#  mvn clean package

# 3Ô∏è‚É£ Levantar los contenedores y reconstruir las im√°genes (modo background recomendado)
#  docker-compose up --build -d

# ‚úÖ Listo. El proyecto deber√≠a estar disponible en http://localhost:8080
# üê≥ Para ver los logs del contenedor de Jetty si hay errores:
#  docker logs jetty-sublimapp

# üõë Para detener los contenedores manualmente:
#  docker-compose down
